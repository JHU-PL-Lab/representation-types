
let mat4x4_col0 = fun m -> ( m.0.0; m.1.0; m.2.0; m.3.0 ) in 
let mat4x4_col1 = fun m -> ( m.0.1; m.1.1; m.2.1; m.3.1 ) in 
let mat4x4_col2 = fun m -> ( m.0.2; m.1.2; m.2.2; m.3.2 ) in
let mat4x4_col3 = fun m -> ( m.0.3; m.1.3; m.2.3; m.3.3 ) in


let vec4_dot = fun v1 v2 ->
    v1.0*v2.0 + v1.1*v2.1 + v1.2*v2.2 + v1.3*v2.3
in

let mat4x4_mul = fun m1 m2 ->
    let mat4x4_mul_row = fun v1 m2 ->
        (
            vec4_dot v1 (mat4x4_col0 m2);
            vec4_dot v1 (mat4x4_col1 m2);
            vec4_dot v1 (mat4x4_col2 m2);
            vec4_dot v1 (mat4x4_col3 m2);
        )
    in
    (
        mat4x4_mul_row m1.0 m2;
        mat4x4_mul_row m1.1 m2;
        mat4x4_mul_row m1.2 m2;
        mat4x4_mul_row m1.3 m2;
    )
in

let mat4x4_det = fun m ->
    m.0.3 * m.1.2 * m.2.1 * m.3.0  -  m.0.2 * m.1.3 * m.2.1 * m.3.0  -  m.0.3 * m.1.1 * m.2.2 * m.3.0 + 
    m.0.1 * m.1.3 * m.2.2 * m.3.0  +  m.0.2 * m.1.1 * m.2.3 * m.3.0  -  m.0.1 * m.1.2 * m.2.3 * m.3.0 - 
    m.0.3 * m.1.2 * m.2.0 * m.3.1  +  m.0.2 * m.1.3 * m.2.0 * m.3.1  +  m.0.3 * m.1.0 * m.2.2 * m.3.1 - 
    m.0.0 * m.1.3 * m.2.2 * m.3.1  -  m.0.2 * m.1.0 * m.2.3 * m.3.1  +  m.0.0 * m.1.2 * m.2.3 * m.3.1 + 
    m.0.3 * m.1.1 * m.2.0 * m.3.2  -  m.0.1 * m.1.3 * m.2.0 * m.3.2  -  m.0.3 * m.1.0 * m.2.1 * m.3.2 + 
    m.0.0 * m.1.3 * m.2.1 * m.3.2  +  m.0.1 * m.1.0 * m.2.3 * m.3.2  -  m.0.0 * m.1.1 * m.2.3 * m.3.2 - 
    m.0.2 * m.1.1 * m.2.0 * m.3.3  +  m.0.1 * m.1.2 * m.2.0 * m.3.3  +  m.0.2 * m.1.0 * m.2.1 * m.3.3 - 
    m.0.0 * m.1.2 * m.2.1 * m.3.3  -  m.0.1 * m.1.0 * m.2.2 * m.3.3  +  m.0.0 * m.1.1 * m.2.2 * m.3.3
in


let mat4x4_input = fun _ ->
    (
        (input; input; input; input);
        (input; input; input; input);
        (input; input; input; input);
        (input; input; input; input);
    )
in

let main = fun _ ->
    let num_reps = input in
    let m1 = mat4x4_input {} in
    let m2 = mat4x4_input {} in
    let m3 = mat4x4_input {} in

    let loop = fun n ->
        let det = mat4x4_det (mat4x4_mul m1 (mat4x4_mul m2 m3)) in
        if n == 1 then det else
        loop (n - 1)
    in

    loop num_reps
in

main {}